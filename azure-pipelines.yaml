trigger:
  batch: true
  branches:
    include:
      - main

pr:
  - main

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: 'hmcts'

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy
  - name: environment_components
    type: object
    default:
      - deployment: 'stg_core'
        environment: 'stg'
        component: 'core'
        service_connection: 'DTS-HERITAGE-INTSVC-STG'
        dependsOn: 'Precheck'
      - deployment: 'stg_backend'
        environment: 'stg'
        component: 'backend'
        service_connection: 'DTS-HERITAGE-INTSVC-STG'
        # Change this to Frontend
        dependsOn: 'stg_core'
      - deployment: 'prod_core'
        environment: 'prod'
        component: 'core'
        service_connection: 'DTS-HERITAGE-INTSVC-PROD'
        dependsOn: 'stg_core' 
      - deployment: 'prod_backend'
        environment: 'prod'
        component: 'backend'
        service_connection: 'DTS-HERITAGE-INTSVC-PROD'
        # Change this to Frontend
        dependsOn: 
          - 'prod_core'
          - 'stg_backend'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentImage
    value: ubuntu-20.04
  - name: product
    value: crime-portal
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - stage: Precheck
    jobs:
      - job:
        pool: 
          vmImage: ${{ variables.agentImage }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-sp-token'
              serviceConnection: 'azurerm-sandbox'
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - job: TerraformPlanApply
          pool: 
            vmImage: ${{ variables.agentImage }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
            - template: steps/terraform.yaml@cnp-azuredevops-libraries
              parameters:
                overrideAction: ${{ parameters.overrideAction }}
                environment: ${{ deployment.environment }}
                component: ${{ deployment.component }}
                serviceConnection: ${{ deployment.service_connection }}
                terraformInitSubscription: ${{ variables.terraformInitSubscription }}
                product: ${{ variables.product }}
                planCommandOptions:
                  -compact-warnings